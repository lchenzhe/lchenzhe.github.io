{"meta":{"title":"追梦少年人","subtitle":"勿忘初心，方得始终","description":"前世千万次的回眸，换的今生的擦肩而过；","author":"嫽陈","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"python学习第二周","slug":"python学习第二周","date":"2018-10-20T14:03:59.000Z","updated":"2018-10-20T14:03:59.363Z","comments":true,"path":"2018/10/20/python学习第二周/","link":"","permalink":"http://yoursite.com/2018/10/20/python学习第二周/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"python学习第一周","slug":"python学习第一周","date":"2018-10-20T14:03:27.000Z","updated":"2018-10-20T14:03:27.263Z","comments":true,"path":"2018/10/20/python学习第一周/","link":"","permalink":"http://yoursite.com/2018/10/20/python学习第一周/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"python购物车","slug":"python购物车","date":"2018-10-18T14:28:10.000Z","updated":"2018-10-18T14:32:10.417Z","comments":true,"path":"2018/10/18/python购物车/","link":"","permalink":"http://yoursite.com/2018/10/18/python购物车/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879# Author:Jchen程序：购物车程序需求:启动程序后，让用户输入工资，然后打印商品列表允许用户根据商品编号购买商品用户选择商品后，检测余额是否够，够就直接扣款，不够就提醒可随时退出，退出时，打印已购买商品和余额#alex老师的#商品列表product_list =[ ('iphone',5800), ('Mac Pro',9800), ('bike',800), ('watch',10600), ('coffee',31), ('Alex-python',120)]#购物列表shopping_list= []#输入工资salary = input(\"Input your salary:\")if salary.isdigit(): #判断是否为数字 salary = int(salary) #死循环 while True: #打印商品编号及商品 for index,item in enumerate(product_list): #把列表的下标取出来 # print(product_list.index(item),item) print(index,item) user_choice = input(\"选择要买啥？，按q退出购买。&gt;&gt;&gt;：\") if user_choice.isdigit(): user_choice = int(user_choice) #判断商品编号是否正确 if user_choice &lt; len(product_list) and user_choice &gt;=0: p_item = product_list[user_choice] if p_item[1] &lt;= salary: #买得起 shopping_list.append(p_item) #购物车内添加商品 salary -= p_item[1] #扣钱 print(\"Added %s into shoppingcart,your current balance is \\033[31;1m%s\\033[0m\"%(p_item,salary)) #此处存在高亮 031为字体红色 固定写法\\033[颜色编号;1m \\033[0m else: #买不起 print(\"\\033[41;1m你的余额只剩[%s]啦，还买个毛线啊！\\033[0m\"%salary) ##此处存在高亮 041为底纹红色 else: #编号超出 print(\"product code [%s] is not exist\"%user_choice) elif user_choice == 'q': #退出购物并打印购物列表 print('------shopping list----------') for p in shopping_list: print(p) print(\"your current balance:\",salary) exit() else: #其他非正确购物编号 print(\"invalid option\")else: #工资输入错误 print(\"请输入数字！\")# 我自己写的commodity = [[\"computer\",5000],[\"coffee\",30],[\"book\",100],[\"bicycle\",1000]]shopping_cart = [ ]salary = int(input(\"please enter you salary:\"))if salary &gt;0: print(commodity) q = 1 while q == 1: res = int(input(\"please choose commodity you like:\")) if commodity[res][1] &lt;salary: shopping_cart.append(commodity[res]) salary -=commodity[res][1] print(\"Congratulations on your purchase success!\\nyour current balance is %s\"%salary) q = int(input('是否继续？\\n1/继续，0/退出')) else: print(\"Your balance is insufficient!\") q = int(input('是否继续？\\n1/继续，0/退出')) if shopping_cart == [] and q ==0: print(\"You didn't buy anything!\") break print(\"This is your shopping cart:\",shopping_cart)","categories":[],"tags":[]},{"title":"爬取淘宝信息","slug":"爬取淘宝信息","date":"2018-10-06T14:48:10.000Z","updated":"2018-10-06T14:57:41.292Z","comments":true,"path":"2018/10/06/爬取淘宝信息/","link":"","permalink":"http://yoursite.com/2018/10/06/爬取淘宝信息/","excerpt":"","text":"1234567891011121314151617181920212223242526272829303132333435363738394041424344#！/usr/bin/env python3import requestsimport reimport jsonquery = input('请输入需要的关键词&gt;&gt;&gt;：').strip()url='https://s.taobao.com/search?q=&#123;&#125;&amp;imgfile=&amp;commend=all&amp;ssid=s5-e&amp;search_type=item&amp;sourceId=tb.index&amp;spm=a21bo.2017.201856-taobao-item.1&amp;ie=utf8&amp;initiative_id=tbindexz_20170306'.format(query)headers=&#123; 'user-agent': ' Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.75 Safari/537.36'&#125;# 发送http请求response = requests.get(url)html = response.text # 获取了数据#提取我们需要的数据 通过正则表达式( 多用 )content = re.findall(r'g_page_config =(.*?)g_srp_loadCss',html,re.S) [0] # 正则表达式 g_page_config 开始 中间有=(.*?) g_srp_loadCss结尾# 数据格式化 json 数据content = content.strip(' \\n;') # 去掉多余的字符print(content)content = json.loads(content) # 把json格式的字符串 转换成字典#数据结构的嵌套data = content['mods']['itemlist']['data']['auctions'] # 取出每一个商品#循环取出每一条数据#需要什么数据？# 标题，标价，购买人数，是否包邮，是否天猫，地区，店名，url#写csv格式 文本格式f = open('搜索&#123;&#125;的结果.CSV'.format(query),'w',encoding='utf-8')#写标题f.write('标题,标价,购买人数,是否包邮,是否天猫,地区,店名,url\\n')for item in data: temp = &#123; 'title':item['title'], 'view_price':item['view_price'], 'view_sales': item['view_sales'], 'view_fee': '否' if float(item['view_fee']) else '是', 'isTmall': '是' if item['shopcard']['isTmall'] else '否', 'area':item['item_loc'], 'name':item['nick'], 'detal_url':item['detail_url'] &#125; f.write('&#123;title&#125;,&#123;view_price&#125;,&#123;view_sales&#125;,&#123;view_fee&#125;,&#123;isTmall&#125;,&#123;area&#125;,&#123;name&#125;,&#123;detal_url&#125;\\n'.format( ** temp))f.close()","categories":[],"tags":[]},{"title":"test_my_site","slug":"test-my-site","date":"2018-10-06T09:42:44.000Z","updated":"2018-10-06T14:57:49.831Z","comments":true,"path":"2018/10/06/test-my-site/","link":"","permalink":"http://yoursite.com/2018/10/06/test-my-site/","excerpt":"","text":"1print('hello world')","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-10-06T09:41:13.971Z","updated":"2018-10-06T09:41:13.973Z","comments":true,"path":"2018/10/06/hello-world/","link":"","permalink":"http://yoursite.com/2018/10/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}